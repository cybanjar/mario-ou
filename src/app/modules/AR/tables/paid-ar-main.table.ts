import { TableActionHeader } from '~/components/VhpUI/typings';
import { formatterMoney } from '~/app/helpers/formatterMoney.helper';
import { PaymentList } from '../models/payment-list.model';
import { date } from 'quasar';

export function getMainColumns(showInv: boolean) {
  const mainListColumns: TableActionHeader<PaymentList>[] = [
    {
      label: 'Bill Date',
      field: 'billDate',
      name: 'billDate',
      sortable: true,
      classes: 'text-capitalize nowrap pointer',
      headerStyle: 'width: 100px',
      style: 'width: 100px',
      format: (val) => date.formatDate(val, 'DD/MM/YY'),
      align: 'left',
    },
    {
      label: 'Bill Number',
      field: 'billNumber',
      name: 'billNumber',
      sortable: true,
      classes: 'text-capitalize',
      headerStyle: 'width: 100px',
      style: 'width: 100px',
      align: 'left',
    },
    {
      label: 'Bill Receiver',
      field: 'billReceiver',
      name: 'billReceiver',
      sortable: true,
      classes: ' text-capitalize',
      headerStyle: 'width: 290px',
      style: 'width: 290px',
      align: 'left',
    },
    {
      label: 'Ar Amount',
      field: 'arAmount',
      name: 'arAmount',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 150px',
      style: 'width: 150px',
      align: 'right',
      format: (val) => (Number.isInteger(val) ? formatterMoney(val) : val),
    },
    {
      label: 'Payment Amount',
      field: 'paymentAmount',
      name: 'paymentAmount',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 150px',
      style: 'width: 150px',
      align: 'right',
      format: (val) => (Number.isInteger(val) ? formatterMoney(val) : ''),
    },
    {
      label: 'Pay Foreign Amount',
      field: 'payForeignAmount',
      name: 'payForeignAmount',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 155px',
      style: 'width: 155px',
      align: 'right',
      format: (val) => (Number.isInteger(val) ? formatterMoney(val) : ''),
    },
    {
      label: 'Currency',
      field: 'currency',
      name: 'currency',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 100px',
      style: 'width: 100px',
      align: 'left',
    },
    {
      label: 'Payment Article',
      field: 'paymentArticle',
      name: 'paymentArticle',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 200px',
      style: 'width: 200px',
      align: 'left',
    },
    {
      label: 'Payment Date',
      field: 'paymentDate',
      name: 'paymentDate',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 120px',
      style: 'width: 120px',
      format: (val) => date.formatDate(val, 'DD/MM/YY'),
      align: 'left',
    },
    {
      label: 'Id',
      field: 'id',
      name: 'id',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 75px',
      style: 'width: 75px',
      align: 'left',
    },
    {
      label: 'Payment Remark',
      field: 'paymentRemark',
      name: 'paymentRemark',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 250px',
      style: 'width: 250px',
    },
    {
      label: 'Total Payment',
      field: 'totalPayment',
      name: 'totalPayment',
      sortable: true,
      classes: 'nowrap pointer text-capitalize',
      headerStyle: 'width: 150px',
      style: 'width: 150px',
      align: 'right',
      format: (val) => (Number.isInteger(val) ? formatterMoney(val) : ''),
    },
    {
      field: 'actions',
      name: 'actions',
      headerStyle: 'width: 50px',
    },
  ];

  if (showInv) {
    mainListColumns.splice(2, 0, {
      label: 'Invoice No',
      field: 'invoiceNo',
      sortable: true,
      name: 'invoiceNo',
      classes: 'text-capitalize',
      headerStyle: 'width: 100px',
      style: 'width: 100px',
      align: 'left',
    });
  }

  return mainListColumns;
}
